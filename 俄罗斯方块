import pygame
import random

# 游戏窗口大小
WINDOW_WIDTH = 800
WINDOW_HEIGHT = 600

# 蛇身和食物大小
BLOCK_SIZE = 20

# 颜色定义
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)

# 初始化Pygame
pygame.init()

# 创建游戏窗口
window = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption("贪食蛇游戏")

clock = pygame.time.Clock()

# 蛇的初始位置和初始移动方向
snake_x = WINDOW_WIDTH // 2
snake_y = WINDOW_HEIGHT // 2
snake_speed_x = 0
snake_speed_y = 0

# 食物的初始位置
food_x = round(random.randrange(0, WINDOW_WIDTH - BLOCK_SIZE) / BLOCK_SIZE) * BLOCK_SIZE
food_y = round(random.randrange(0, WINDOW_HEIGHT - BLOCK_SIZE) / BLOCK_SIZE) * BLOCK_SIZE

# 蛇的初始长度和身体坐标列表
snake_length = 1
snake_body = []
snake_body.append([snake_x, snake_y])

# 游戏结束标志
game_over = False

# 游戏主循环
while not game_over:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            game_over = True
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                snake_speed_x = -BLOCK_SIZE
                snake_speed_y = 0
            elif event.key == pygame.K_RIGHT:
                snake_speed_x = BLOCK_SIZE
                snake_speed_y = 0
            elif event.key == pygame.K_UP:
                snake_speed_x = 0
                snake_speed_y = -BLOCK_SIZE
            elif event.key == pygame.K_DOWN:
                snake_speed_x = 0
                snake_speed_y = BLOCK_SIZE

    # 更新蛇的位置
    snake_x += snake_speed_x
    snake_y += snake_speed_y

    # 判断蛇是否吃到食物
    if snake_x == food_x and snake_y == food_y:
        food_x = round(random.randrange(0, WINDOW_WIDTH - BLOCK_SIZE) / BLOCK_SIZE) * BLOCK_SIZE
        food_y = round(random.randrange(0, WINDOW_HEIGHT - BLOCK_SIZE) / BLOCK_SIZE) * BLOCK_SIZE
        snake_length += 1

    # 更新蛇的身体
    snake_head = [snake_x, snake_y]
    snake_body.append(snake_head)
    if len(snake_body) > snake_length:
        del snake_body[0]

    # 检测蛇是否碰到自己的身体
    for segment in snake_body[:-1]:
        if segment == snake_head:
            game_over = True

    # 检测蛇是否碰到边界
    if snake_x < 0 or snake_x >= WINDOW_WIDTH or snake_y < 0 or snake_y >= WINDOW_HEIGHT:
        game_over = True

    # 渲染游戏窗口
    window.fill(BLACK)
    for segment in snake_body:
        pygame.draw.rect(window, WHITE, [segment[0], segment[1], BLOCK_SIZE, BLOCK_SIZE])
    pygame.draw.rect(window, RED, [food_x, food_y, BLOCK_SIZE, BLOCK_SIZE])
    pygame.display.update()

    # 控制游戏速度
    clock.tick(10)

# 游戏结束，退出Pygame
pygame.quit()
